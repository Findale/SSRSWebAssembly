@page "/triage-card"

@using Telerik.DataSource
@using Telerik.DataSource.Extensions

<h2>Triage Resources</h2>

<div class="k-card-deck flex-center flex-wrap">
    @foreach (var item in ListViewData)
        {
                <TelerikCard Class="customizeCard" Width="300px">
                <a href=@item.urlAddress target="_blank" rel="noopener noreferrer">
                    <CardHeader Class="card-header">
                        <CardTitle>
                            @item.name
                        </CardTitle>
                    </CardHeader>
                    <CardBody Class="card-body">
                        <span>@item.description</span>
                    </CardBody>
                </a>
                    <CardFooter>
                    @{
                        string typeColor;
                        switch(item.type)
                        {
                            case "Light":
                                typeColor = "#bf3b70";
                                break;
                            case "Heavy":
                                typeColor = "#814ea6";
                                break;
                            case "Heavy/Light":
                                typeColor = "#509ede";
                                break;
                            case "All Value Streams":
                                typeColor = "#c081eb";
                                break;
                            default:
                                typeColor = "#d98327";
                                break;
                        }
                        @((MarkupString)$"<span class=\"chip\" style=\"background: {typeColor}\">+ {item.type}</span>")
                        @((MarkupString)$"<span class=\"chip\" style=\"background: #d98327\">+ {item.source}</span>")
                    }
                    </CardFooter>
                </TelerikCard>
        }
</div>

@code {
    private void OnValueChanged(CompositeFilterDescriptor filter)
    {
        var dataSourceRequest = new DataSourceRequest { Filters = new List<IFilterDescriptor> { filter } };

        var datasourceResult = InitialData.ToDataSourceResult(dataSourceRequest);

        ListViewData = datasourceResult.Data.Cast<Link>().ToList();
    }

    List<Link> ListViewData { get; set; } = new List<Link>();
    static List<Link>? InitialData { get; set; }

    protected override void OnInitialized()
    {
        LoadData();
        base.OnInitialized();
    }

    void LoadData()
    {
        string[][] LinkDetails =
        {
            new string[] {
                "GPM Tool",
                "http://tableau/#/views/GPM/GPM?:iid=2",
                "Tableau",
                "Capacity, Meter, and Down Gross GPM Tool.",
                "Heavy/Light"
            },
            new string[] {
                "Lego vs. SAP",
                "http://tableau/#/views/LEGOandSAPDownOil/WellListbyAreaOffCode?:iid=5",
                "Tableau",
                "Ensuring equipment that is own has orders in SAP.",
                "Heavy/Light"
            },
            new string[]
            {
                "Well Alarms",
                "http://tableau/#/views/Bel_XSpocAlarms_0/Well_List?:iid=2",
                "Tableau",
                "Belridge XSPOC Alarms",
                "Heavy/Light"
            },
            new string[]
            {
                "Constraints",
                "http://tableau/#/views/Diatomite_Constraint_Oil_Gross/CONSTRAINTCURTAILMENT?:iid=5",
                "Tableau",
                "Visualize volumes associated with constraining wells for voidage",
                "Light"
            },
            new string[]
            {
                "Deferred Oil and Uptime",
                "http://tableau/#/views/DeferredOilField/DeferredOil?:iid=7",
                "Tableau",
                "Deferred oil and uptime by month.",
                "Heavy/Light"
            },
            new string[]
            {
                "Missing Facility AB1960 Inspections",
                "http://tableau/#/views/AB1960Inspections/MissingFacilityInspections",
                "Tableau",
                "AB1960 Inspections - missing facility.",
                "Heavy/Light"
            },
            new string[]
            {
                "Missing Vehicle Inspections",
                "http://tableau/#/views/VehicleInspectionReview/MissingInspections?:iid=9",
                "Tableau",
                "Vechicle Inspection Review - Missing Inspections.",
                "All Value Streams"
            },
            new string[]
            {
                "Moyno Pump Status",
                "http://tableau/#/views/MoynoPumpStatusReport/DiCLAMPumpStationOverview?:iid=3",
                "Tableau",
                "Workbook: Moyno Pump Status Report",
                "Light"
            },
            new string[]
            {
                "Check Valve Report",
                "http://tableau/#/views/DICCheckValveReport/CheckValves?:iid=5",
                "Tableau",
                "DIC Check Valve Report",
                "Heavy/Light"
            },
            new string[]
            {
                "Open CAPS",
                "http://tableau/#/views/CAPReport/AllOpenCAPs?:iid=11",
                "Tableau",
                "CAP Report: All Open CAPs",
                "All Value Streams"
            },
            new string[]
            {
                "Daily Production Control",
                "http://aeraweb02/belridge/BelridgeLineOfSight/BelridgeLineOfSight/BelridgeLineOfSightValueStreamDashboard.htm",
                "Aeraweb",
                "LOS Production Measures - Daily Production Control Outline.",
                "All Value Streams"
            },
            new string[]
            {
                "PREV Compliance",
                "http://aeraweb/Scheduled_Reports/SAPBI/BL_BO_BL00_Compliance_Forecaster.pdf",
                "BO Report",
                "Compliance Forecaster",
                "All Value Streams"
            },
            new string[]
            {
                "Annual Well Inspections",
                "http://aeraweb/Scheduled_Reports/SAPBI/BL_BO_ANNUAL_WELL_INSPECTION_CLAM.pdf",
                "BO Report",
                "CLAM Annual Well Inspection.",
                "Heavy/Light"
            },
            new string[]
            {
                "Light Group Meter Report",
                "http://aeraweb/Scheduled_Reports/SAPBI/BL_BO_Diatomite_Gross.pdf",
                "BO Report",
                "Diatomite Gross Group Meter Report",
                "Light"
            },
            new string[]
            {
                "Heavy Group Meter Report",
                "http://aeraweb/Scheduled_Reports/SAPBI/BL_BO_Tulare_Gross.pdf",
                "BO Report",
                "Tulare Gross Group Meter Report",
                "Heavy"
            },
            new string[]
            {
                "NightRider Report",
                "https://k2.aeraenergy.com/Runtime/Runtime/Form/NightRiderHomeForm",
                "K2 Form",
                "Night Rider Report",
                "Heavy/Light"
            },
            new string[]
            {
                "Surface Request",
                "https://k2.aeraenergy.com/Runtime/Form/Surface+PM+Notification/",
                "K2 Form",
                "Surface PM Notification Request",
                "Heavy/Light"
            },
            new string[]
            {
                "Sub-Surface Request",
                "https://k2.aeraenergy.com/Runtime/Form/Subsurface+PM+Notification/",
                "K2 Form",
                "Surface PM Notification Request",
                "Heavy/Light"
            },
            new string[]
            {
                "Title V Leak Log",
                "https://aeraenergyllc-my.sharepoint.com/:x:/g/personal/sewhitestone_aeraenergy_com/ERHxe6PuivVNllZZYhnMA0EBX5NKyhtx3hARG199Nm6n7A?e=4%3AxHVCIy&at=9&CID=2AB114C9-8D51-4C45-8C5A-18C7500CD54F&wdLOR=c53E490F9-5CB8-4E3F-9CD6-AA44D63B1FAF",
                "Sharepoint",
                "Title V CLAM FE Leak Log",
                "Heavy/Light"
            },
            // BROKEN LINK
            //new string[]
            //{
            //    "TECO Report",
            //    "http://bksapbi01:8080/BOE/OpenDocument/123/PlatformServices/service/app/error.do",
            //    "Heavy/Light"
            //},
            new string[]
            {
                "FAS Request",
                "http://aeraweb02/SJVASP/FASRequest/",
                "Aeraweb",
                "FAS Request System",
                "Heavy/Light"
            },
        };

        List<Link> dataBuilder = new List<Link>();
        foreach (string[] details in LinkDetails)
        {
            Link newLink = new Link
                {
                    name = details[0],
                    urlAddress = details[1],
                    source = details[2],
                    description = details[3],
                    type = details[4]
                };
            dataBuilder.Add(newLink);
        }
        InitialData = dataBuilder;
        ListViewData = InitialData;
    }

    public class Link
    {
        public string? name { get; set; }
        public string? urlAddress { get; set; }
        public string? description { get; set; }
        public string? source { get; set; }
        public string? type { get; set; }
    }
}

<style>
    .chip {
        border: 0.005em solid;
        border-radius: 0.5em;
        padding: 0.4em;
        color: white;
    }
    
    a:link, a:visited, a:active {
        text-decoration: none;
        color: black;
    }

    a:hover {
        background: #cfe0ff;
    }

    .container {
        padding: 0.5em;
    }

    .k-card-deck {
        vertical-align: top;
    }

    .card-header {
        background: rgb(92, 92, 92);
        font-weight: bolder;
        color: white;
    }

    .card-body{
        //background: rgb(13,0,223);
        //background: linear-gradient(54deg, rgba(13,0,223,1) 0%, rgba(99,99,224,1) 50%, rgba(149,237,255,1) 100%); 
        word-wrap: normal;
        min-height: 5em;
        overflow: auto;
    }
</style>